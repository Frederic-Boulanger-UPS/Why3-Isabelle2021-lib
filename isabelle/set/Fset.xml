<theory name="set.Fset" realize="true"><realized><require name="why3.BuiltIn.BuiltIn"/><require name="int.Int"/></realized><typedecl name="unit" altname="unit" path="why3.Unit.Unit"><params/><prodt/></typedecl><typedecl name="fset" altname="fset" path="set.Fset"><params><param name="a"/></params></typedecl><param name="mem" altname="mem" path="set.Fset"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></param><definition altname="infix ==" path="set.Fset"><app><const name="HOL.eq"/><app><var name="infix_eqeq"><pred><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></pred></var><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app><app><const name="HOL.All"/><abs name="x"><tvar name="a"/><app><const name="HOL.eq"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var></app><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></abs></app></app></definition><lemma name="extensionality" altname="extensionality" path="set.Fset"><prems><app><const name="infix_eqeq" local="true"><pred><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app></prems><concls><app><const name="HOL.eq"/><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app></concls></lemma><definition altname="subset" path="set.Fset"><app><const name="HOL.eq"/><app><var name="subset"><pred><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></pred></var><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app><app><const name="HOL.All"/><abs name="x"><tvar name="a"/><app><const name="HOL.implies"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var></app><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></abs></app></app></definition><lemma name="subset_refl" altname="subset_refl" path="set.Fset"><prems/><concls><app><const name="subset" local="true"><pred><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></concls></lemma><lemma name="subset_trans" altname="subset_trans" path="set.Fset"><prems><app><const name="subset" local="true"><pred><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app><app><const name="subset" local="true"><pred><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s3"><type name="fset" local="true"><tvar name="a"/></type></var></app></prems><concls><app><const name="subset" local="true"><pred><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s3"><type name="fset" local="true"><tvar name="a"/></type></var></app></concls></lemma><definition altname="is_empty" path="set.Fset"><app><const name="HOL.eq"/><app><var name="is_empty"><pred><type name="fset" local="true"><tvar name="a"/></type></pred></var><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app><app><const name="HOL.All"/><abs name="x"><tvar name="a"/><app><const name="HOL.Not"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></abs></app></app></definition><param name="empty" altname="empty" path="set.Fset"><type name="fset" local="true"><tvar name="a"/></type></param><lemma name="is_empty_empty" altname="is_empty_empty" path="set.Fset"><prems/><concls><app><const name="is_empty" local="true"><pred><type name="fset" local="true"><tvar name="a"/></type></pred></const><const name="empty" local="true"><type name="fset" local="true"><tvar name="a"/></type></const></app></concls></lemma><lemma name="empty_is_empty" altname="empty_is_empty" path="set.Fset"><prems><app><const name="is_empty" local="true"><pred><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></prems><concls><app><const name="HOL.eq"/><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var><const name="empty" local="true"><type name="fset" local="true"><tvar name="a"/></type></const></app></concls></lemma><param name="add" altname="add" path="set.Fset"><fun><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></param><lemma name="add_def" altname="add_def" path="set.Fset"><prems/><concls><app><const name="HOL.eq"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="y"><tvar name="a"/></var><app><const name="add" local="true"><fun><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="x"><tvar name="a"/></var><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></app><app><const name="HOL.disj"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="y"><tvar name="a"/></var><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app><app><const name="HOL.eq"/><var name="y"><tvar name="a"/></var><var name="x"><tvar name="a"/></var></app></app></app></concls></lemma><lemma name="mem_singleton" altname="mem_singleton" path="set.Fset"><prems><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="y"><tvar name="a"/></var><app><const name="add" local="true"><fun><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="x"><tvar name="a"/></var><const name="empty" local="true"><type name="fset" local="true"><tvar name="a"/></type></const></app></app></prems><concls><app><const name="HOL.eq"/><var name="y"><tvar name="a"/></var><var name="x"><tvar name="a"/></var></app></concls></lemma><param name="remove" altname="remove" path="set.Fset"><fun><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></param><lemma name="remove_def" altname="remove_def" path="set.Fset"><prems/><concls><app><const name="HOL.eq"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="y"><tvar name="a"/></var><app><const name="remove" local="true"><fun><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="x"><tvar name="a"/></var><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></app><app><const name="HOL.conj"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="y"><tvar name="a"/></var><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app><app><const name="HOL.Not"/><app><const name="HOL.eq"/><var name="y"><tvar name="a"/></var><var name="x"><tvar name="a"/></var></app></app></app></app></concls></lemma><lemma name="add_remove" altname="add_remove" path="set.Fset"><prems><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="add" local="true"><fun><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="x"><tvar name="a"/></var><app><const name="remove" local="true"><fun><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="x"><tvar name="a"/></var><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></app><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></concls></lemma><lemma name="remove_add" altname="remove_add" path="set.Fset"><prems/><concls><app><const name="HOL.eq"/><app><const name="remove" local="true"><fun><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="x"><tvar name="a"/></var><app><const name="add" local="true"><fun><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="x"><tvar name="a"/></var><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></app><app><const name="remove" local="true"><fun><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="x"><tvar name="a"/></var><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></concls></lemma><lemma name="subset_remove" altname="subset_remove" path="set.Fset"><prems/><concls><app><const name="subset" local="true"><pred><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></pred></const><app><const name="remove" local="true"><fun><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="x"><tvar name="a"/></var><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></concls></lemma><param name="union" altname="union" path="set.Fset"><fun><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></param><lemma name="union_def" altname="union_def" path="set.Fset"><prems/><concls><app><const name="HOL.eq"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><app><const name="union" local="true"><fun><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app></app><app><const name="HOL.disj"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var></app><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></app></concls></lemma><lemma name="subset_union_1" altname="subset_union_1" path="set.Fset"><prems/><concls><app><const name="subset" local="true"><pred><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><app><const name="union" local="true"><fun><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></concls></lemma><lemma name="subset_union_2" altname="subset_union_2" path="set.Fset"><prems/><concls><app><const name="subset" local="true"><pred><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var><app><const name="union" local="true"><fun><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></concls></lemma><param name="inter" altname="inter" path="set.Fset"><fun><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></param><lemma name="inter_def" altname="inter_def" path="set.Fset"><prems/><concls><app><const name="HOL.eq"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><app><const name="inter" local="true"><fun><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app></app><app><const name="HOL.conj"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var></app><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></app></concls></lemma><lemma name="subset_inter_1" altname="subset_inter_1" path="set.Fset"><prems/><concls><app><const name="subset" local="true"><pred><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></pred></const><app><const name="inter" local="true"><fun><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var></app></concls></lemma><lemma name="subset_inter_2" altname="subset_inter_2" path="set.Fset"><prems/><concls><app><const name="subset" local="true"><pred><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></pred></const><app><const name="inter" local="true"><fun><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app></concls></lemma><param name="diff" altname="diff" path="set.Fset"><fun><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></param><lemma name="diff_def" altname="diff_def" path="set.Fset"><prems/><concls><app><const name="HOL.eq"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><app><const name="diff" local="true"><fun><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app></app><app><const name="HOL.conj"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var></app><app><const name="HOL.Not"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></app></app></concls></lemma><lemma name="subset_diff" altname="subset_diff" path="set.Fset"><prems/><concls><app><const name="subset" local="true"><pred><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></pred></const><app><const name="diff" local="true"><fun><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var></app></concls></lemma><param name="pick" altname="pick" path="set.Fset"><fun><type name="fset" local="true"><tvar name="a"/></type><tvar name="a"/></fun></param><lemma name="pick_def" altname="pick_def" path="set.Fset"><prems><app><const name="HOL.Not"/><app><const name="is_empty" local="true"><pred><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></prems><concls><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><app><const name="pick" local="true"><fun><type name="fset" local="true"><tvar name="a"/></type><tvar name="a"/></fun></const><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></concls></lemma><definition altname="disjoint" path="set.Fset"><app><const name="HOL.eq"/><app><var name="disjoint"><pred><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></pred></var><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app><app><const name="HOL.All"/><abs name="x"><tvar name="a"/><app><const name="HOL.disj"/><app><const name="HOL.Not"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var></app></app><app><const name="HOL.Not"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></app></abs></app></app></definition><lemma name="disjoint_inter_empty" altname="disjoint_inter_empty" path="set.Fset"><prems/><concls><app><const name="HOL.eq"/><app><const name="disjoint" local="true"><pred><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app><app><const name="is_empty" local="true"><pred><type name="fset" local="true"><tvar name="a"/></type></pred></const><app><const name="inter" local="true"><fun><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></app></concls></lemma><lemma name="disjoint_diff_eq" altname="disjoint_diff_eq" path="set.Fset"><prems/><concls><app><const name="HOL.eq"/><app><const name="disjoint" local="true"><pred><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app><app><const name="HOL.eq"/><app><const name="diff" local="true"><fun><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></concls></lemma><lemma name="disjoint_diff_s2" altname="disjoint_diff_s2" path="set.Fset"><prems/><concls><app><const name="disjoint" local="true"><pred><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></pred></const><app><const name="diff" local="true"><fun><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app></concls></lemma><param name="filter" altname="filter" path="set.Fset"><fun><type name="fset" local="true"><tvar name="a"/></type><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="fset" local="true"><tvar name="a"/></type></fun></param><lemma name="filter_def" altname="filter_def" path="set.Fset"><prems/><concls><app><const name="HOL.eq"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><app><const name="filter" local="true"><fun><type name="fset" local="true"><tvar name="a"/></type><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var><var name="p"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app><app><const name="HOL.conj"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app><app><const name="HOL.eq"/><app><var name="p"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="x"><tvar name="a"/></var></app><const name="HOL.True"/></app></app></app></concls></lemma><lemma name="subset_filter" altname="subset_filter" path="set.Fset"><prems/><concls><app><const name="subset" local="true"><pred><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></pred></const><app><const name="filter" local="true"><fun><type name="fset" local="true"><tvar name="a"/></type><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var><var name="p"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></concls></lemma><param name="map" altname="map" path="set.Fset"><fun><fun><tvar name="a"/><tvar name="b"/></fun><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="b"/></type></fun></param><lemma name="map_def" altname="map_def" path="set.Fset"><prems/><concls><app><const name="HOL.eq"/><app><const name="mem" local="true"><pred><tvar name="b"/><type name="fset" local="true"><tvar name="b"/></type></pred></const><var name="y"><tvar name="b"/></var><app><const name="map" local="true"><fun><fun><tvar name="a"/><tvar name="b"/></fun><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="b"/></type></fun></const><var name="f"><fun><tvar name="a"/><tvar name="b"/></fun></var><var name="u"><type name="fset" local="true"><tvar name="a"/></type></var></app></app><app><const name="HOL.Ex"/><abs name="x"><tvar name="a"/><app><const name="HOL.conj"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="u"><type name="fset" local="true"><tvar name="a"/></type></var></app><app><const name="HOL.eq"/><var name="y"><tvar name="b"/></var><app><var name="f"><fun><tvar name="a"/><tvar name="b"/></fun></var><var name="x"><tvar name="a"/></var></app></app></app></abs></app></app></concls></lemma><lemma name="mem_map" altname="mem_map" path="set.Fset"><prems><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="u"><type name="fset" local="true"><tvar name="a"/></type></var></app></prems><concls><app><const name="mem" local="true"><pred><tvar name="b"/><type name="fset" local="true"><tvar name="b"/></type></pred></const><app><var name="f"><fun><tvar name="a"/><tvar name="b"/></fun></var><var name="x"><tvar name="a"/></var></app><app><const name="map" local="true"><fun><fun><tvar name="a"/><tvar name="b"/></fun><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="b"/></type></fun></const><var name="f"><fun><tvar name="a"/><tvar name="b"/></fun></var><var name="u"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></concls></lemma><lemma name="cardinal_nonneg" altname="cardinal_nonneg" path="set.Fset"><prems/><concls><app><const name="Orderings.ord_class.less_eq"/><num val="0"><type name="Int.int"/></num><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="FSet.fcard"/><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></app></concls></lemma><lemma name="cardinal_empty" altname="cardinal_empty" path="set.Fset"><prems/><concls><app><const name="HOL.eq"/><app><const name="is_empty" local="true"><pred><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app><app><const name="HOL.eq"/><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="FSet.fcard"/><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></app><num val="0"><type name="Int.int"/></num></app></app></concls></lemma><lemma name="cardinal_add" altname="cardinal_add" path="set.Fset"><prems/><concls><app><const name="HOL.implies"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app><app><const name="HOL.eq"/><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="FSet.fcard"/><app><const name="add" local="true"><fun><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="x"><tvar name="a"/></var><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></app><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="FSet.fcard"/><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.Not"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></app><app><const name="HOL.eq"/><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="FSet.fcard"/><app><const name="add" local="true"><fun><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="x"><tvar name="a"/></var><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></app><app><const name="Groups.plus_class.plus"/><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="FSet.fcard"/><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></app><num val="1"><type name="Int.int"/></num></app></app></app></concls></lemma><lemma name="cardinal_remove" altname="cardinal_remove" path="set.Fset"><prems/><concls><app><const name="HOL.implies"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app><app><const name="HOL.eq"/><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="FSet.fcard"/><app><const name="remove" local="true"><fun><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="x"><tvar name="a"/></var><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></app><app><const name="Groups.minus_class.minus"/><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="FSet.fcard"/><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></app><num val="1"><type name="Int.int"/></num></app></app></app><app><const name="HOL.implies"/><app><const name="HOL.Not"/><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></app><app><const name="HOL.eq"/><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="FSet.fcard"/><app><const name="remove" local="true"><fun><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="x"><tvar name="a"/></var><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></app><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="FSet.fcard"/><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></app></app></concls></lemma><lemma name="cardinal_subset" altname="cardinal_subset" path="set.Fset"><prems><app><const name="subset" local="true"><pred><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app></prems><concls><app><const name="Orderings.ord_class.less_eq"/><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="FSet.fcard"/><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var></app></app><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="FSet.fcard"/><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></app></concls></lemma><lemma name="subset_eq" altname="subset_eq" path="set.Fset"><prems><app><const name="subset" local="true"><pred><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app><app><const name="HOL.eq"/><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="FSet.fcard"/><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var></app></app><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="FSet.fcard"/><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></app></prems><concls><app><const name="HOL.eq"/><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app></concls></lemma><lemma name="cardinal1" altname="cardinal1" path="set.Fset"><prems><app><const name="HOL.eq"/><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="FSet.fcard"/><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></app><num val="1"><type name="Int.int"/></num></app><app><const name="mem" local="true"><pred><tvar name="a"/><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="x"><tvar name="a"/></var><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></prems><concls><app><const name="HOL.eq"/><var name="x"><tvar name="a"/></var><app><const name="pick" local="true"><fun><type name="fset" local="true"><tvar name="a"/></type><tvar name="a"/></fun></const><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></concls></lemma><lemma name="cardinal_union" altname="cardinal_union" path="set.Fset"><prems/><concls><app><const name="HOL.eq"/><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="FSet.fcard"/><app><const name="union" local="true"><fun><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></app><app><const name="Groups.minus_class.minus"/><app><const name="Groups.plus_class.plus"/><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="FSet.fcard"/><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var></app></app><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="FSet.fcard"/><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></app><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="FSet.fcard"/><app><const name="inter" local="true"><fun><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></app></app></app></concls></lemma><lemma name="cardinal_inter_disjoint" altname="cardinal_inter_disjoint" path="set.Fset"><prems><app><const name="disjoint" local="true"><pred><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></pred></const><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="FSet.fcard"/><app><const name="inter" local="true"><fun><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></app><num val="0"><type name="Int.int"/></num></app></concls></lemma><lemma name="cardinal_diff" altname="cardinal_diff" path="set.Fset"><prems/><concls><app><const name="HOL.eq"/><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="FSet.fcard"/><app><const name="diff" local="true"><fun><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></app><app><const name="Groups.minus_class.minus"/><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="FSet.fcard"/><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var></app></app><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="FSet.fcard"/><app><const name="inter" local="true"><fun><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="s1"><type name="fset" local="true"><tvar name="a"/></type></var><var name="s2"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></app></app></app></concls></lemma><lemma name="cardinal_filter" altname="cardinal_filter" path="set.Fset"><prems/><concls><app><const name="Orderings.ord_class.less_eq"/><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="FSet.fcard"/><app><const name="filter" local="true"><fun><type name="fset" local="true"><tvar name="a"/></type><fun><tvar name="a"/><type name="HOL.bool"/></fun><type name="fset" local="true"><tvar name="a"/></type></fun></const><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var><var name="p"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></app><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="FSet.fcard"/><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></app></concls></lemma><lemma name="cardinal_map" altname="cardinal_map" path="set.Fset"><prems/><concls><app><const name="Orderings.ord_class.less_eq"/><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="FSet.fcard"/><app><const name="map" local="true"><fun><fun><tvar name="a"/><tvar name="b"/></fun><type name="fset" local="true"><tvar name="a"/></type><type name="fset" local="true"><tvar name="b"/></type></fun></const><var name="f"><fun><tvar name="a"/><tvar name="b"/></fun></var><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></app><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="FSet.fcard"/><var name="s"><type name="fset" local="true"><tvar name="a"/></type></var></app></app></app></concls></lemma></theory>