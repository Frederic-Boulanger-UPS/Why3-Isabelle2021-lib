<theory name="set.Set" realize="true"><realized><require name="why3.BuiltIn.BuiltIn"/><require name="map.Map"/><require name="map.Const"/></realized><typedecl name="unit" altname="unit" path="why3.Unit.Unit"><params/><prodt/></typedecl><typedecl name="set" altname="set" path="set.Set"><params><param name="a"/></params><fun><tvar name="a"/><type name="HOL.bool"/></fun></typedecl><definition altname="mem" path="set.Set"><app><const name="HOL.eq"/><app><var name="mem"><pred><tvar name="a"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></var><var name="x"><tvar name="a"/></var><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="HOL.eq"/><app><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="x"><tvar name="a"/></var></app><const name="HOL.True"/></app></app></definition><definition altname="infix ==" path="set.Set"><app><const name="HOL.eq"/><app><var name="infix_eqeq"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></var><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="HOL.All"/><abs name="x"><tvar name="a"/><app><const name="HOL.eq"/><app><const name="mem" local="true"><pred><tvar name="a"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="x"><tvar name="a"/></var><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="mem" local="true"><pred><tvar name="a"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="x"><tvar name="a"/></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></abs></app></app></definition><lemma name="extensionality" altname="extensionality" path="set.Set"><prems><app><const name="infix_eqeq" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></prems><concls><app><const name="HOL.eq"/><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></concls></lemma><definition altname="subset" path="set.Set"><app><const name="HOL.eq"/><app><var name="subset"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></var><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="HOL.All"/><abs name="x"><tvar name="a"/><app><const name="HOL.implies"/><app><const name="mem" local="true"><pred><tvar name="a"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="x"><tvar name="a"/></var><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="mem" local="true"><pred><tvar name="a"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="x"><tvar name="a"/></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></abs></app></app></definition><lemma name="subset_refl" altname="subset_refl" path="set.Set"><prems/><concls><app><const name="subset" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></concls></lemma><lemma name="subset_trans" altname="subset_trans" path="set.Set"><prems><app><const name="subset" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="subset" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s3"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></prems><concls><app><const name="subset" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s3"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></concls></lemma><definition altname="is_empty" path="set.Set"><app><const name="HOL.eq"/><app><var name="is_empty"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></var><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="HOL.All"/><abs name="x"><tvar name="a"/><app><const name="HOL.Not"/><app><const name="mem" local="true"><pred><tvar name="a"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="x"><tvar name="a"/></var><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></abs></app></app></definition><lemma name="is_empty_empty" altname="is_empty_empty" path="set.Set"><prems/><concls><app><const name="is_empty" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><app><const name="const" path="map.Const"><fun><type name="HOL.bool"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></const><const name="HOL.False"/></app></app></concls></lemma><lemma name="empty_is_empty" altname="empty_is_empty" path="set.Set"><prems><app><const name="is_empty" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></prems><concls><app><const name="HOL.eq"/><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><app><const name="const" path="map.Const"><fun><type name="HOL.bool"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></const><const name="HOL.False"/></app></app></concls></lemma><lemma name="mem_singleton" altname="mem_singleton" path="set.Set"><prems><app><const name="mem" local="true"><pred><tvar name="a"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="y"><tvar name="a"/></var><app><const name="Fun.fun_upd"/><app><const name="const" path="map.Const"><fun><type name="HOL.bool"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></const><const name="HOL.False"/></app><var name="x"><tvar name="a"/></var><const name="HOL.True"/></app></app></prems><concls><app><const name="HOL.eq"/><var name="y"><tvar name="a"/></var><var name="x"><tvar name="a"/></var></app></concls></lemma><lemma name="add_remove" altname="add_remove" path="set.Set"><prems><app><const name="mem" local="true"><pred><tvar name="a"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="x"><tvar name="a"/></var><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="Fun.fun_upd"/><app><const name="Fun.fun_upd"/><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="x"><tvar name="a"/></var><const name="HOL.False"/></app><var name="x"><tvar name="a"/></var><const name="HOL.True"/></app><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></concls></lemma><lemma name="remove_add" altname="remove_add" path="set.Set"><prems/><concls><app><const name="HOL.eq"/><app><const name="Fun.fun_upd"/><app><const name="Fun.fun_upd"/><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="x"><tvar name="a"/></var><const name="HOL.True"/></app><var name="x"><tvar name="a"/></var><const name="HOL.False"/></app><app><const name="Fun.fun_upd"/><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="x"><tvar name="a"/></var><const name="HOL.False"/></app></app></concls></lemma><lemma name="subset_remove" altname="subset_remove" path="set.Set"><prems/><concls><app><const name="subset" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><app><const name="Fun.fun_upd"/><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="x"><tvar name="a"/></var><const name="HOL.False"/></app><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></concls></lemma><param name="union" altname="union" path="set.Set"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></param><lemma name="unionqtdef" altname="union&#39;def"><prems/><concls><app><const name="HOL.eq"/><app><const name="HOL.eq"/><app><app><const name="union" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><var name="x"><tvar name="a"/></var></app><const name="HOL.True"/></app><app><const name="HOL.disj"/><app><const name="mem" local="true"><pred><tvar name="a"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="x"><tvar name="a"/></var><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="mem" local="true"><pred><tvar name="a"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="x"><tvar name="a"/></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></app></concls></lemma><lemma name="subset_union_1" altname="subset_union_1" path="set.Set"><prems/><concls><app><const name="subset" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><app><const name="union" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></concls></lemma><lemma name="subset_union_2" altname="subset_union_2" path="set.Set"><prems/><concls><app><const name="subset" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><app><const name="union" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></concls></lemma><param name="inter" altname="inter" path="set.Set"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></param><lemma name="interqtdef" altname="inter&#39;def"><prems/><concls><app><const name="HOL.eq"/><app><const name="HOL.eq"/><app><app><const name="inter" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><var name="x"><tvar name="a"/></var></app><const name="HOL.True"/></app><app><const name="HOL.conj"/><app><const name="mem" local="true"><pred><tvar name="a"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="x"><tvar name="a"/></var><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="mem" local="true"><pred><tvar name="a"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="x"><tvar name="a"/></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></app></concls></lemma><lemma name="subset_inter_1" altname="subset_inter_1" path="set.Set"><prems/><concls><app><const name="subset" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><app><const name="inter" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></concls></lemma><lemma name="subset_inter_2" altname="subset_inter_2" path="set.Set"><prems/><concls><app><const name="subset" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><app><const name="inter" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></concls></lemma><param name="diff" altname="diff" path="set.Set"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></param><lemma name="diffqtdef" altname="diff&#39;def"><prems/><concls><app><const name="HOL.eq"/><app><const name="HOL.eq"/><app><app><const name="diff" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><var name="x"><tvar name="a"/></var></app><const name="HOL.True"/></app><app><const name="HOL.conj"/><app><const name="mem" local="true"><pred><tvar name="a"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="x"><tvar name="a"/></var><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="HOL.Not"/><app><const name="mem" local="true"><pred><tvar name="a"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="x"><tvar name="a"/></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></app></app></concls></lemma><lemma name="subset_diff" altname="subset_diff" path="set.Set"><prems/><concls><app><const name="subset" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><app><const name="diff" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></concls></lemma><param name="complement" altname="complement" path="set.Set"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></param><lemma name="complementqtdef" altname="complement&#39;def"><prems/><concls><app><const name="HOL.eq"/><app><const name="HOL.eq"/><app><app><const name="complement" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></const><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><var name="x"><tvar name="a"/></var></app><const name="HOL.True"/></app><app><const name="HOL.Not"/><app><const name="mem" local="true"><pred><tvar name="a"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="x"><tvar name="a"/></var><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></app></concls></lemma><param name="pick" altname="pick" path="set.Set"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><tvar name="a"/></fun></param><lemma name="pick_def" altname="pick_def" path="set.Set"><prems><app><const name="HOL.Not"/><app><const name="is_empty" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></prems><concls><app><const name="mem" local="true"><pred><tvar name="a"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><app><const name="pick" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><tvar name="a"/></fun></const><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><var name="s"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></concls></lemma><definition altname="disjoint" path="set.Set"><app><const name="HOL.eq"/><app><var name="disjoint"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></var><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="HOL.All"/><abs name="x"><tvar name="a"/><app><const name="HOL.disj"/><app><const name="HOL.Not"/><app><const name="mem" local="true"><pred><tvar name="a"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="x"><tvar name="a"/></var><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app><app><const name="HOL.Not"/><app><const name="mem" local="true"><pred><tvar name="a"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="x"><tvar name="a"/></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></app></abs></app></app></definition><lemma name="disjoint_inter_empty" altname="disjoint_inter_empty" path="set.Set"><prems/><concls><app><const name="HOL.eq"/><app><const name="disjoint" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="is_empty" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><app><const name="inter" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></app></concls></lemma><lemma name="disjoint_diff_eq" altname="disjoint_diff_eq" path="set.Set"><prems/><concls><app><const name="HOL.eq"/><app><const name="disjoint" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="HOL.eq"/><app><const name="diff" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></concls></lemma><lemma name="disjoint_diff_s2" altname="disjoint_diff_s2" path="set.Set"><prems/><concls><app><const name="disjoint" local="true"><pred><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><app><const name="diff" local="true"><fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun></fun></const><var name="s1"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><var name="s2"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></concls></lemma><param name="map" altname="map" path="set.Set"><fun><fun><tvar name="a"/><tvar name="b"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="b"/><type name="HOL.bool"/></fun></fun></param><lemma name="mapqtdef" altname="map&#39;def"><prems/><concls><app><const name="HOL.eq"/><app><const name="HOL.eq"/><app><app><const name="map" local="true"><fun><fun><tvar name="a"/><tvar name="b"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="b"/><type name="HOL.bool"/></fun></fun></const><var name="f"><fun><tvar name="a"/><tvar name="b"/></fun></var><var name="u"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><var name="y"><tvar name="b"/></var></app><const name="HOL.True"/></app><app><const name="HOL.Ex"/><abs name="x"><tvar name="a"/><app><const name="HOL.conj"/><app><const name="mem" local="true"><pred><tvar name="a"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="x"><tvar name="a"/></var><var name="u"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app><app><const name="HOL.eq"/><var name="y"><tvar name="b"/></var><app><var name="f"><fun><tvar name="a"/><tvar name="b"/></fun></var><var name="x"><tvar name="a"/></var></app></app></app></abs></app></app></concls></lemma><lemma name="mem_map" altname="mem_map" path="set.Set"><prems><app><const name="mem" local="true"><pred><tvar name="a"/><fun><tvar name="a"/><type name="HOL.bool"/></fun></pred></const><var name="x"><tvar name="a"/></var><var name="u"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></prems><concls><app><const name="mem" local="true"><pred><tvar name="b"/><fun><tvar name="b"/><type name="HOL.bool"/></fun></pred></const><app><var name="f"><fun><tvar name="a"/><tvar name="b"/></fun></var><var name="x"><tvar name="a"/></var></app><app><const name="map" local="true"><fun><fun><tvar name="a"/><tvar name="b"/></fun><fun><tvar name="a"/><type name="HOL.bool"/></fun><fun><tvar name="b"/><type name="HOL.bool"/></fun></fun></const><var name="f"><fun><tvar name="a"/><tvar name="b"/></fun></var><var name="u"><fun><tvar name="a"/><type name="HOL.bool"/></fun></var></app></app></concls></lemma></theory>