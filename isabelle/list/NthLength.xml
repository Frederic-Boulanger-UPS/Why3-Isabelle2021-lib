<theory name="list.NthLength" realize="true"><realized><require name="why3.BuiltIn.BuiltIn"/><require name="int.Int"/><require name="list.List"/><require name="list.Length"/><require name="list.Nth"/></realized><typedecl name="unit" altname="unit" path="why3.Unit.Unit"><params/><prodt/></typedecl><definition altname="is_none" path="option.Option"><app><const name="HOL.eq"/><app><var name="is_none"><pred><type name="Option.option"><tvar name="a"/></type></pred></var><var name="o1"><type name="Option.option"><tvar name="a"/></type></var></app><case><var name="o1"><type name="Option.option"><tvar name="a"/></type></var><pat><const name="Option.option.None"><type name="Option.option"><tvar name="a"/></type></const><const name="HOL.True"/></pat><pat><app><const name="Option.option.Some"/><const name="Pure.dummy_pattern"/></app><const name="HOL.False"/></pat></case></app></definition><lemma name="is_noneqtspec" altname="is_none&#39;spec" path="option.Option"><prems/><concls><app><const name="HOL.eq"/><app><const name="is_none" local="true"><pred><type name="Option.option"><tvar name="a"/></type></pred></const><var name="o1"><type name="Option.option"><tvar name="a"/></type></var></app><app><const name="HOL.eq"/><var name="o1"><type name="Option.option"><tvar name="a"/></type></var><const name="Option.option.None"><type name="Option.option"><tvar name="a"/></type></const></app></app></concls></lemma><lemma name="nth_none_1" altname="nth_none_1" path="list.NthLength"><prems><app><const name="Orderings.ord_class.less"/><var name="i"><type name="Int.int"/></var><num val="0"><type name="Int.int"/></num></app></prems><concls><app><const name="HOL.eq"/><app><const name="nth" path="list.Nth"><fun><type name="Int.int"/><type name="List.list"><tvar name="a"/></type><type name="Option.option"><tvar name="a"/></type></fun></const><var name="i"><type name="Int.int"/></var><var name="l"><type name="List.list"><tvar name="a"/></type></var></app><const name="Option.option.None"><type name="Option.option"><tvar name="a"/></type></const></app></concls></lemma><lemma name="nth_none_2" altname="nth_none_2" path="list.NthLength"><prems><app><const name="Orderings.ord_class.less_eq"/><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="List.length"/><var name="l"><type name="List.list"><tvar name="a"/></type></var></app></app><var name="i"><type name="Int.int"/></var></app></prems><concls><app><const name="HOL.eq"/><app><const name="nth" path="list.Nth"><fun><type name="Int.int"/><type name="List.list"><tvar name="a"/></type><type name="Option.option"><tvar name="a"/></type></fun></const><var name="i"><type name="Int.int"/></var><var name="l"><type name="List.list"><tvar name="a"/></type></var></app><const name="Option.option.None"><type name="Option.option"><tvar name="a"/></type></const></app></concls></lemma><lemma name="nth_none_3" altname="nth_none_3" path="list.NthLength"><prems><app><const name="HOL.eq"/><app><const name="nth" path="list.Nth"><fun><type name="Int.int"/><type name="List.list"><tvar name="a"/></type><type name="Option.option"><tvar name="a"/></type></fun></const><var name="i"><type name="Int.int"/></var><var name="l"><type name="List.list"><tvar name="a"/></type></var></app><const name="Option.option.None"><type name="Option.option"><tvar name="a"/></type></const></app></prems><concls><app><const name="HOL.disj"/><app><const name="Orderings.ord_class.less"/><var name="i"><type name="Int.int"/></var><num val="0"><type name="Int.int"/></num></app><app><const name="Orderings.ord_class.less_eq"/><app><const name="Nat.semiring_1_class.of_nat"><fun><type name="Nat.nat"/><type name="Int.int"/></fun></const><app><const name="List.length"/><var name="l"><type name="List.list"><tvar name="a"/></type></var></app></app><var name="i"><type name="Int.int"/></var></app></app></concls></lemma></theory>