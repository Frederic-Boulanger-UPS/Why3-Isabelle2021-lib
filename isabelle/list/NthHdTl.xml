<theory name="list.NthHdTl" realize="true"><realized><require name="why3.BuiltIn.BuiltIn"/><require name="int.Int"/><require name="list.List"/><require name="list.Nth"/><require name="list.HdTl"/></realized><typedecl name="unit" altname="unit" path="why3.Unit.Unit"><params/><prodt/></typedecl><definition altname="is_none" path="option.Option"><app><const name="HOL.eq"/><app><var name="is_none"><pred><type name="Option.option"><tvar name="a"/></type></pred></var><var name="o1"><type name="Option.option"><tvar name="a"/></type></var></app><case><var name="o1"><type name="Option.option"><tvar name="a"/></type></var><pat><const name="Option.option.None"><type name="Option.option"><tvar name="a"/></type></const><const name="HOL.True"/></pat><pat><app><const name="Option.option.Some"/><const name="Pure.dummy_pattern"/></app><const name="HOL.False"/></pat></case></app></definition><lemma name="is_noneqtspec" altname="is_none&#39;spec" path="option.Option"><prems/><concls><app><const name="HOL.eq"/><app><const name="is_none" local="true"><pred><type name="Option.option"><tvar name="a"/></type></pred></const><var name="o1"><type name="Option.option"><tvar name="a"/></type></var></app><app><const name="HOL.eq"/><var name="o1"><type name="Option.option"><tvar name="a"/></type></var><const name="Option.option.None"><type name="Option.option"><tvar name="a"/></type></const></app></app></concls></lemma><lemma name="Nth_tl" altname="Nth_tl" path="list.NthHdTl"><prems><app><const name="HOL.eq"/><app><const name="tl" path="list.HdTl"><fun><type name="List.list"><tvar name="a"/></type><type name="Option.option"><type name="List.list"><tvar name="a"/></type></type></fun></const><var name="l1"><type name="List.list"><tvar name="a"/></type></var></app><app><const name="Option.option.Some"/><var name="l2"><type name="List.list"><tvar name="a"/></type></var></app></app><app><const name="HOL.Not"/><app><const name="HOL.eq"/><var name="i"><type name="Int.int"/></var><app><const name="Groups.uminus_class.uminus"/><num val="1"><type name="Int.int"/></num></app></app></app></prems><concls><app><const name="HOL.eq"/><app><const name="nth" path="list.Nth"><fun><type name="Int.int"/><type name="List.list"><tvar name="a"/></type><type name="Option.option"><tvar name="a"/></type></fun></const><var name="i"><type name="Int.int"/></var><var name="l2"><type name="List.list"><tvar name="a"/></type></var></app><app><const name="nth" path="list.Nth"><fun><type name="Int.int"/><type name="List.list"><tvar name="a"/></type><type name="Option.option"><tvar name="a"/></type></fun></const><app><const name="Groups.plus_class.plus"/><var name="i"><type name="Int.int"/></var><num val="1"><type name="Int.int"/></num></app><var name="l1"><type name="List.list"><tvar name="a"/></type></var></app></app></concls></lemma><lemma name="Nth0_head" altname="Nth0_head" path="list.NthHdTl"><prems/><concls><app><const name="HOL.eq"/><app><const name="nth" path="list.Nth"><fun><type name="Int.int"/><type name="List.list"><tvar name="a"/></type><type name="Option.option"><tvar name="a"/></type></fun></const><num val="0"><type name="Int.int"/></num><var name="l"><type name="List.list"><tvar name="a"/></type></var></app><app><const name="hd" path="list.HdTl"><fun><type name="List.list"><tvar name="a"/></type><type name="Option.option"><tvar name="a"/></type></fun></const><var name="l"><type name="List.list"><tvar name="a"/></type></var></app></app></concls></lemma></theory>